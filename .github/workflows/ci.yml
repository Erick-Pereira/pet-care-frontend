name: Angular CI Pipeline

on:
  push:
    branches:
      - main # ou 'master', conforme o seu branch principal
  pull_request:
    branches:
      - main # ou 'master'

jobs:
  build:
    runs-on: ubuntu-latest # Usando Ubuntu para rodar o pipeline

    steps:
      # Passo 1: Fazer checkout do código
      - name: Checkout code
        uses: actions/checkout@v2

      # Passo 2: Configurar o Node.js (atualizado para versão 18)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18" # Atualizado para Node.js 18

      # Passo 2.1: Verificar versão do Node.js e npm
      - name: Check Node.js and npm versions
        run: |
          node -v
          npm -v

      # Passo 3: Limpar o cache do npm
      - name: Clean npm cache
        run: |
          npm cache clean --force

      # Passo 4: Instalar as dependências (usando npm ci para builds reprodutíveis)
      - name: Install dependencies
        run: |
          npm ci

      # Passo 4.2: Verificar instalação do Prettier/.bin ao PATH
      - name: Verify Prettier installation to PATH
        run: |
          npx prettier --version(npm bin)"

      # Passo 5: Instalar o Google Chrome      # Passo 5: Instalar o Google Chrome
      - name: Install Google Chrome
        run: |
          sudo apt-get update apt-get update
          sudo apt-get install -y google-chrome-stable install -y google-chrome-stable

      # Passo 6: Rodar o ng lint para verificar a qualidade do códigoa qualidade do código
      - name: Run ng lint
        run: |
          npm run lint

      # Passo 6.1: Verificar o formato do código
      - name: Check code formatting
        run: |
          npm run format

      # Passo 6.2: Verificar configuração do ng lintdo ng lint
      - name: Check ng lint configurationconfiguration
        run: |
          npm run lint -- --dry-run

      # Passo 7: Rodar os testes unitárioss
      - name: Run unit tests
        run: |
          npm run test -- --watch=false --browsers=ChromeHeadless

      # Passo 8: Rodar a build do Angular
      - name: Build Angular app
        run: |
          npm run build --prod  # Executa o build de produção do Angular# Executa o build de produção do Angular

      # Passo 9: Verificar se a build foi bem-sucedida (genérico)erificar se a build foi bem-sucedida (genérico)
      - name: Check build success: Check build success
        run: |        run: |





          fi            exit 1            echo "Build failed! Dist folder not found."          if [ ! -d dist ]; then          if [ ! -d dist ]; then
            echo "Build failed! Dist folder not found."
            exit 1
          fi
